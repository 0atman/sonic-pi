// AUTO-GENERATED-DOCS
// Do not manually add any code below this comment
// otherwise it may be removed

void MainWindow::initDocsWindow() {
// synths info

QListWidget *synthsNameList = new QListWidget;
synthsNameList->setSortingEnabled(true);
connect(synthsNameList, SIGNAL(currentItemChanged(QListWidgetItem*, QListWidgetItem*)), this, SLOT(updateDocPane(QListWidgetItem*, QListWidgetItem*)));
QBoxLayout *synthsLayout = new QBoxLayout(QBoxLayout::LeftToRight);
synthsLayout->addWidget(synthsNameList);
synthsLayout->addWidget(synthsDocPane);
synthsLayout->setStretch(1, 1);
QWidget *synthsTabWidget = new QWidget;
synthsTabWidget->setLayout(synthsLayout);
docsCentral->addTab(synthsTabWidget, "Synths");

QListWidgetItem *synths_item_1 = new QListWidgetItem("Dull Bell");
synths_item_1->setData(32, QVariant("<h2> Dull Bell</h2><h2><pre>use_synth :dull_bell</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 1}</pre></h4><h3>  A simple dull dischordant bell sound.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_1);

QListWidgetItem *synths_item_2 = new QListWidgetItem("Pretty Bell");
synths_item_2->setData(32, QVariant("<h2> Pretty Bell</h2><h2><pre>use_synth :pretty_bell</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 1}</pre></h4><h3>  A simple pretty bell sound.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_2);

QListWidgetItem *synths_item_3 = new QListWidgetItem("Saw Wave");
synths_item_3->setData(32, QVariant("<h2> Saw Wave</h2><h2><pre>use_synth :saw_beep</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.0, sustain: 0, release: 0.2}</pre></h4><h3>  A simple saw wave with a low pass filter.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_3);

QListWidgetItem *synths_item_4 = new QListWidgetItem("Sine Wave");
synths_item_4->setData(32, QVariant("<h2> Sine Wave</h2><h2><pre>use_synth :beep</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.0, sustain: 0, release: 0.2}</pre></h4><h3>  A simple pure sine wave.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_4);

QListWidgetItem *synths_item_5 = new QListWidgetItem("Detuned Saw wave");
synths_item_5->setData(32, QVariant("<h2> Detuned Saw wave</h2><h2><pre>use_synth :dsaw</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.1, sustain: 0, release: 0.3, cutoff: 100, cutoff_slide: 0, detune: 0.1, detune_slide: 0}</pre></h4><h3>  A pair of detuned saw waves with a lop pass filter.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.3</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> detune:</pre></h4><ul>    <li> Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.</li>    <li> Default: 0.1</li>    <li> none</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> detune_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the detune value to change. A long detune_slide value means that the detune takes a long time to slide from the previous value to the new value. A detune_slide of 0 means that the detune instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_5);

QListWidgetItem *synths_item_6 = new QListWidgetItem("Basic FM synthesis");
synths_item_6->setData(32, QVariant("<h2> Basic FM synthesis</h2><h2><pre>use_synth :fm</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 1, sustain: 0, release: 1, divisor: 2, divisor_slide: 0, depth: 1, depth_slide: 0}</pre></h4><h3>  A sine wave with a fundamental frequency which is modulated at audio rate by another sine wave with a specific modulation division and depth.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> divisor:</pre></h4><ul>    <li> Modifies the frequency of the modulator oscillator relative to the carrier. Don't worry too much about what this means - just try different numbers out!</li>    <li> Default: 2</li>    <li> none</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> divisor_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the divisor value to change. A long divisor_slide value means that the divisor takes a long time to slide from the previous value to the new value. A divisor_slide of 0 means that the divisor instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> depth:</pre></h4><ul>    <li> Modifies the depth of the carrier wave used to modify fundamental frequency. Don't worry too much about what this means - just try different numbers out!</li>    <li> Default: 1</li>    <li> none</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> depth_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the depth value to change. A long depth_slide value means that the depth takes a long time to slide from the previous value to the new value. A depth_slide of 0 means that the depth instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_6);

QListWidgetItem *synths_item_7 = new QListWidgetItem("Modulated Saw Wave");
synths_item_7->setData(32, QVariant("<h2> Modulated Saw Wave</h2><h2><pre>use_synth :mod_saw</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 2, cutoff: 100, cutoff_slide: 0, mod_rate: 1, mod_rate_slide: 0, mod_range: 5, mod_range_slide: 0, mod_width: 0.5, mod_width_slide: 0}</pre></h4><h3>  A saw wave which modulates between two separate notes.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_rate value to change. A long mod_rate_slide value means that the mod_rate takes a long time to slide from the previous value to the new value. A mod_rate_slide of 0 means that the mod_rate instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_range value to change. A long mod_range_slide value means that the mod_range takes a long time to slide from the previous value to the new value. A mod_range_slide of 0 means that the mod_range instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_width value to change. A long mod_width_slide value means that the mod_width takes a long time to slide from the previous value to the new value. A mod_width_slide of 0 means that the mod_width instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_7);

QListWidgetItem *synths_item_8 = new QListWidgetItem("Simple Modulated Saw Wave");
synths_item_8->setData(32, QVariant("<h2> Simple Modulated Saw Wave</h2><h2><pre>use_synth :mod_saw_s</pre></h2><h4><pre>{note: 52, amp: 1, pan: 0, attack: 0.01, sustain: 0, release: 2, slide: 0, mod_rate: 1, mod_range: 5, mod_width: 0.5}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_8);

QListWidgetItem *synths_item_9 = new QListWidgetItem("Modulated Detuned Saw Waves");
synths_item_9->setData(32, QVariant("<h2> Modulated Detuned Saw Waves</h2><h2><pre>use_synth :mod_dsaw</pre></h2><h4><pre>{note: 52, amp: 1, pan: 0, attack: 0.01, sustain: 0, release: 2, slide: 0, cutoff: 100, cutoff_slide: 0, mod_rate: 1, mod_range: 5, mod_width: 0.5, detune: 0.1}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> detune:</pre></h4><ul>    <li> Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.</li>    <li> Default: 0.1</li>    <li> none</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_9);

QListWidgetItem *synths_item_10 = new QListWidgetItem("Modulated Detuned Saw Waves Simple");
synths_item_10->setData(32, QVariant("<h2> Modulated Detuned Saw Waves Simple</h2><h2><pre>use_synth :mod_dsaw_s</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 2, mod_rate: 1, mod_rate_slide: 0, mod_range: 5, mod_range_slide: 0, mod_width: 0.5, mod_width_slide: 0, detune: 0.1, detune_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_rate value to change. A long mod_rate_slide value means that the mod_rate takes a long time to slide from the previous value to the new value. A mod_rate_slide of 0 means that the mod_rate instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_range value to change. A long mod_range_slide value means that the mod_range takes a long time to slide from the previous value to the new value. A mod_range_slide of 0 means that the mod_range instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_width value to change. A long mod_width_slide value means that the mod_width takes a long time to slide from the previous value to the new value. A mod_width_slide of 0 means that the mod_width instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> detune:</pre></h4><ul>    <li> Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.</li>    <li> Default: 0.1</li>    <li> none</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> detune_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the detune value to change. A long detune_slide value means that the detune takes a long time to slide from the previous value to the new value. A detune_slide of 0 means that the detune instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_10);

QListWidgetItem *synths_item_11 = new QListWidgetItem("Modulated Sine Wave");
synths_item_11->setData(32, QVariant("<h2> Modulated Sine Wave</h2><h2><pre>use_synth :mod_sine</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, pan: 0, attack: 0.01, sustain: 0, release: 2, cutoff: 100, cutoff_slide: 0, mod_rate: 1, mod_rate_slide: 0, mod_range: 5, mod_range_slide: 0, mod_width: 0.5, mod_width_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_rate value to change. A long mod_rate_slide value means that the mod_rate takes a long time to slide from the previous value to the new value. A mod_rate_slide of 0 means that the mod_rate instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_range value to change. A long mod_range_slide value means that the mod_range takes a long time to slide from the previous value to the new value. A mod_range_slide of 0 means that the mod_range instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_width value to change. A long mod_width_slide value means that the mod_width takes a long time to slide from the previous value to the new value. A mod_width_slide of 0 means that the mod_width instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_11);

QListWidgetItem *synths_item_12 = new QListWidgetItem("Simple Modualted Sine Wave");
synths_item_12->setData(32, QVariant("<h2> Simple Modualted Sine Wave</h2><h2><pre>use_synth :mod_sine_s</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 2, slide: 0, mod_rate: 1, mod_rate_slide: 0, mod_range: 5, mod_range_slide: 0, mod_width: 0.5, mod_width_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_rate value to change. A long mod_rate_slide value means that the mod_rate takes a long time to slide from the previous value to the new value. A mod_rate_slide of 0 means that the mod_rate instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_range value to change. A long mod_range_slide value means that the mod_range takes a long time to slide from the previous value to the new value. A mod_range_slide of 0 means that the mod_range instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_width value to change. A long mod_width_slide value means that the mod_width takes a long time to slide from the previous value to the new value. A mod_width_slide of 0 means that the mod_width instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_12);

QListWidgetItem *synths_item_13 = new QListWidgetItem("Modulated Triangle Wave");
synths_item_13->setData(32, QVariant("<h2> Modulated Triangle Wave</h2><h2><pre>use_synth :mod_tri</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, attack: 0.01, sustain: 0, release: 2, cutoff: 100, cutoff_slide: 0, mod_rate: 1, mod_rate_slide: 0, mod_range: 5, mod_range_slide: 0, mod_width: 0.5, mod_width_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_rate value to change. A long mod_rate_slide value means that the mod_rate takes a long time to slide from the previous value to the new value. A mod_rate_slide of 0 means that the mod_rate instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_range value to change. A long mod_range_slide value means that the mod_range takes a long time to slide from the previous value to the new value. A mod_range_slide of 0 means that the mod_range instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_width value to change. A long mod_width_slide value means that the mod_width takes a long time to slide from the previous value to the new value. A mod_width_slide of 0 means that the mod_width instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_13);

QListWidgetItem *synths_item_14 = new QListWidgetItem("Simple Modulated Triangle Wave");
synths_item_14->setData(32, QVariant("<h2> Simple Modulated Triangle Wave</h2><h2><pre>use_synth :mod_tri_s</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, pan: 0, attack: 0.01, sustain: 0, release: 2, slide: 0, mod_rate: 1, mod_range: 5, mod_width: 0.5}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_14);

QListWidgetItem *synths_item_15 = new QListWidgetItem("Modulated Pulse");
synths_item_15->setData(32, QVariant("<h2> Modulated Pulse</h2><h2><pre>use_synth :mod_pulse</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 2, cutoff: 100, cutoff_slide: 0, mod_rate: 1, mod_rate_slide: 0, mod_range: 5, mod_range_slide: 0, mod_width: 0.5, mod_width_slide: 0, pulse_width: 0.5, pulse_width_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_rate_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_rate value to change. A long mod_rate_slide value means that the mod_rate takes a long time to slide from the previous value to the new value. A mod_rate_slide of 0 means that the mod_rate instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_range value to change. A long mod_range_slide value means that the mod_range takes a long time to slide from the previous value to the new value. A mod_range_slide of 0 means that the mod_range instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the mod_width value to change. A long mod_width_slide value means that the mod_width takes a long time to slide from the previous value to the new value. A mod_width_slide of 0 means that the mod_width instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pulse_width:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> pulse_width_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_15);

QListWidgetItem *synths_item_16 = new QListWidgetItem("Simple Modulated Pulse");
synths_item_16->setData(32, QVariant("<h2> Simple Modulated Pulse</h2><h2><pre>use_synth :mod_pulse_s</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, pan: 0, attack: 0.01, sustain: 0, release: 2, mod_rate: 1, mod_range: 5, mod_width: 0.5, pulse_width: 0.5}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> mod_rate:</pre></h4><ul>    <li> Number of times per second that the note switches between the two notes.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_range:</pre></h4><ul>    <li> The size of gap between modulation notes. A gap of 12 is one octave.</li>    <li> Default: 5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> mod_width:</pre></h4><ul>    <li> The phase width of the modulation. Represents how even the gap between modulations is.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pulse_width:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_16);

QListWidgetItem *synths_item_17 = new QListWidgetItem("TB-303 Emulation");
synths_item_17->setData(32, QVariant("<h2> TB-303 Emulation</h2><h2><pre>use_synth :tb303</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 2, cutoff: 80, cutoff_slide: 0, cutoff_min: 30, res: 0.1, res_slide: 0, wave: 0, pulse_width: 0.5, pulse_width_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> </li>    <li> Default: 80</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_min:</pre></h4><ul>    <li> </li>    <li> Default: 30</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.1</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> wave:</pre></h4><ul>    <li> Wave type - 0 saw, 1 pulse</li>    <li> Default: 0</li>    <li> must be one of the following values: [0, 1]</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pulse_width:</pre></h4><ul>    <li> Only valid if wave is type pulse.</li>    <li> Default: 0.5</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pulse_width_slide:</pre></h4><ul>    <li> Time in seconds for pulse width to change. Only valid if wave is type pulse.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_17);

QListWidgetItem *synths_item_18 = new QListWidgetItem("Supersaw");
synths_item_18->setData(32, QVariant("<h2> Supersaw</h2><h2><pre>use_synth :supersaw</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 2, cutoff: 130, cutoff_slide: 0, res: 0.3, res_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 130</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.3</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_18);

QListWidgetItem *synths_item_19 = new QListWidgetItem("Supersaw Simple");
synths_item_19->setData(32, QVariant("<h2> Supersaw Simple</h2><h2><pre>use_synth :supersaw_s</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_19);

QListWidgetItem *synths_item_20 = new QListWidgetItem("The Prophet");
synths_item_20->setData(32, QVariant("<h2> The Prophet</h2><h2><pre>use_synth :prophet</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.01, sustain: 0, release: 2, cutoff: 110, cutoff_slide: 0, res: 0.3, res_slide: 0}</pre></h4><h3>  Dark and swirly, this synth uses Pulse Width Modulation (PWM) to create a timbre which continually moves around. This effect is created using the pulse ugen which produces a variable width square wave. We then control the width of the pulses using a variety of LFOs - sin-osc and lf-tri in this case. We use a number of these LFO modulated pulse ugens with varying LFO type and rate (and phase in some cases to provide the LFO with a different starting point. We then mix all these pulses together to create a thick sound and then feed it through a resonant low pass filter (rlpf). For extra bass, one of the pulses is an octave lower (half the frequency) and its LFO has a little bit of randomisation thrown into its frequency component for that extra bit of variety.</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.01</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 2</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 110</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.3</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_20);

QListWidgetItem *synths_item_21 = new QListWidgetItem("Zawa");
synths_item_21->setData(32, QVariant("<h2> Zawa</h2><h2><pre>use_synth :zawa</pre></h2><h4><pre>{note: 52, note_slide: 0, amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0.1, sustain: 0, release: 1, cutoff: 100, cutoff_slide: 0, rate: 1, rate_slide: 0, depth: 1.5, depth_slide: 0}</pre></h4><h3>  Write me</h3><h3>Arguments</h3><ul>  <li><h4><pre> note:</pre></h4><ul>    <li> Note to play. Either a MIDI number or a symbol representing a note. For example: 30, 52, :C, :C2, :Eb4, or :Ds3</li>    <li> Default: 52</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> note_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the note to change. A long slide value means that the note takes a long time to slide from the previous note to the new note. A slide of 0 means that the note instantly changes to the new note.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to reach full amplitude. A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 0.1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to remain at full amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + sustain + release.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> Amount of time (in seconds) for sound to move from full amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + sustain + release.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> rate:</pre></h4><ul>    <li> write me</li>    <li> Default: 1</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> rate_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> depth:</pre></h4><ul>    <li> write me</li>    <li> Default: 1.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> depth_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_21);

QListWidgetItem *synths_item_22 = new QListWidgetItem("Mono Sample Player");
synths_item_22->setData(32, QVariant("<h2> Mono Sample Player</h2><h2><pre>use_synth :mono_player</pre></h2><h4><pre>{amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0, sustain: -1, release: 0, rate: 1, start: 0, finish: 1}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> </li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> </li>    <li> Default: -1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> </li>    <li> Default: 0</li>    <li> must either be a positive value or -1</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> rate:</pre></h4><ul>    <li> </li>    <li> Default: 1</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> start:</pre></h4><ul>    <li> </li>    <li> Default: 0</li>    <li> must be zero or greater,must be a value between 0 and 1 inclusively</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> finish:</pre></h4><ul>    <li> </li>    <li> Default: 1</li>    <li> must be zero or greater,must be a value between 0 and 1 inclusively</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_22);

QListWidgetItem *synths_item_23 = new QListWidgetItem("Stereo Sample Player");
synths_item_23->setData(32, QVariant("<h2> Stereo Sample Player</h2><h2><pre>use_synth :stereo_player</pre></h2><h4><pre>{amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, attack: 0, sustain: -1, release: 0, rate: 1, start: 0, finish: 1}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> attack:</pre></h4><ul>    <li> </li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> sustain:</pre></h4><ul>    <li> </li>    <li> Default: -1</li>    <li> must be zero or greater</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> release:</pre></h4><ul>    <li> </li>    <li> Default: 0</li>    <li> must either be a positive value or -1</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> rate:</pre></h4><ul>    <li> </li>    <li> Default: 1</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> start:</pre></h4><ul>    <li> </li>    <li> Default: 0</li>    <li> must be zero or greater,must be a value between 0 and 1 inclusively</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> finish:</pre></h4><ul>    <li> </li>    <li> Default: 1</li>    <li> must be zero or greater,must be a value between 0 and 1 inclusively</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_23);

QListWidgetItem *synths_item_24 = new QListWidgetItem("Basic Mono Sample Player - (no envelope)");
synths_item_24->setData(32, QVariant("<h2> Basic Mono Sample Player - (no envelope)</h2><h2><pre>use_synth :basic_mono_player</pre></h2><h4><pre>{amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, rate: 1, rate_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> rate:</pre></h4><ul>    <li> write me</li>    <li> Default: 1</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> rate_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_24);

QListWidgetItem *synths_item_25 = new QListWidgetItem("Basic Stereo Sample Player - (no envelope)");
synths_item_25->setData(32, QVariant("<h2> Basic Stereo Sample Player - (no envelope)</h2><h2><pre>use_synth :basic_stereo_player</pre></h2><h4><pre>{amp: 1, amp_slide: 0, pan: 0, pan_slide: 0, rate: 1, rate_slide: 0}</pre></h4><h3>  </h3><h3>Arguments</h3><ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan:</pre></h4><ul>    <li> Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the soundis completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.</li>    <li> Default: 0</li>    <li> must be a value between -1 and 1 inclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> pan_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the pan to change. A long slide value means that the pan takes a long time to slide from the previous pan position to the new pan position. A slide of 0 means that the pan instantly changes to the new pan position.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> rate:</pre></h4><ul>    <li> write me</li>    <li> Default: 1</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> rate_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
synthsNameList->addItem(synths_item_25);

// fx info

QListWidget *fxNameList = new QListWidget;
fxNameList->setSortingEnabled(true);
connect(fxNameList, SIGNAL(currentItemChanged(QListWidgetItem*, QListWidgetItem*)), this, SLOT(updateDocPane(QListWidgetItem*, QListWidgetItem*)));
QBoxLayout *fxLayout = new QBoxLayout(QBoxLayout::LeftToRight);
fxLayout->addWidget(fxNameList);
fxLayout->addWidget(fxDocPane);
fxLayout->setStretch(1, 1);
QWidget *fxTabWidget = new QWidget;
fxTabWidget->setLayout(fxLayout);
docsCentral->addTab(fxTabWidget, "Fx");

QListWidgetItem *fx_item_26 = new QListWidgetItem("FX Reverb");
fx_item_26->setData(32, QVariant("<h2> FX Reverb</h2><h2><pre>with_fx :reverb</pre></h2><h4><pre>{mix: 0.4, mix_slide: 0, room: 0.6, room_slide: 0, damp: 0.5, damp_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> mix:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.4</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> mix_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> room:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.6</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> room_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> damp:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> damp_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_26);

QListWidgetItem *fx_item_27 = new QListWidgetItem("FX Level Amplifier");
fx_item_27->setData(32, QVariant("<h2> FX Level Amplifier</h2><h2><pre>with_fx :level</pre></h2><h4><pre>{amp: 1, amp_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
fxNameList->addItem(fx_item_27);

QListWidgetItem *fx_item_28 = new QListWidgetItem("FX Echo");
fx_item_28->setData(32, QVariant("<h2> FX Echo</h2><h2><pre>with_fx :echo</pre></h2><h4><pre>{max_delay: 1, delay: 0.4, delay_slide: 0, decay: 8, decay_slide: 0, amp: 1}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> max_delay:</pre></h4><ul>    <li> The maximum delay time in seconds.</li>    <li> Default: 1</li>    <li> must be greater than zero</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> delay:</pre></h4><ul>    <li> The time between echoes in seconds.</li>    <li> Default: 0.4</li>    <li> must be greater than zero</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> delay_slide:</pre></h4><ul>    <li> Slide time in seconds between delay values</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> decay:</pre></h4><ul>    <li> The time it takes for the echoes to fade away in seconds.</li>    <li> Default: 8</li>    <li> must be greater than zero</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> decay_slide:</pre></h4><ul>    <li> Slide time in seconds between decay times</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
fxNameList->addItem(fx_item_28);

QListWidgetItem *fx_item_29 = new QListWidgetItem("FX Slicer");
fx_item_29->setData(32, QVariant("<h2> FX Slicer</h2><h2><pre>with_fx :slicer</pre></h2><h4><pre>{rate: 4, rate_slide: 0, width: 0.5, width_slide: 0, phase: 0, amp: 1, amp_slide: 0.05}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> rate:</pre></h4><ul>    <li> The frequency of the slices</li>    <li> Default: 4</li>    <li> must be greater than zero</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> rate_slide:</pre></h4><ul>    <li> Slide time in seconds between rate values</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> width:</pre></h4><ul>    <li> The width of the slices - 0 - 1.</li>    <li> Default: 0.5</li>    <li> must be a value between 0 and 1 exclusively</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> width_slide:</pre></h4><ul>    <li> Slide time in seconds between width values</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> phase:</pre></h4><ul>    <li> Initial phase.</li>    <li> Default: 0</li>    <li> must be a value between 0 and 1 inclusively</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the resulting effect.</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> The slide lag time for amplitude changes.</li>    <li> Default: 0.05</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
fxNameList->addItem(fx_item_29);

QListWidgetItem *fx_item_30 = new QListWidgetItem("FX Techno from IXI Lang");
fx_item_30->setData(32, QVariant("<h2> FX Techno from IXI Lang</h2><h2><pre>with_fx :ixi_techno</pre></h2><h4><pre>{rate: 0.1, rate_slide: 0, cutoff_min: 880, cutoff_min_slide: 0, cutoff_max: 12000, cutoff_max_slide: 0, res: 0.2, res_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> rate:</pre></h4><ul>    <li> The frequency of filter modulation</li>    <li> Default: 0.1</li>    <li> must be greater than zero</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> rate_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff_min:</pre></h4><ul>    <li> write me</li>    <li> Default: 880</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff_min_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff_max:</pre></h4><ul>    <li> write me</li>    <li> Default: 12000</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> cutoff_max_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.2</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_30);

QListWidgetItem *fx_item_31 = new QListWidgetItem("FX Compressor");
fx_item_31->setData(32, QVariant("<h2> FX Compressor</h2><h2><pre>with_fx :compressor</pre></h2><h4><pre>{amp: 1, amp_slide: 0, threshold: 0.2, threshold_slide: 0, clamp_time: 0.01, clamp_time_slide: 0, slope_above: 0.5, slope_above_slide: 0, slope_below: 1, slope_below_slide: 0, relax_time: 0.01, relax_time_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> threshold:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.2</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> threshold_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> clamp_time:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.01</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> clamp_time_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slope_above:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slope_above_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slope_below:</pre></h4><ul>    <li> write me</li>    <li> Default: 1</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> slope_below_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> relax_time:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.01</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> relax_time_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_31);

QListWidgetItem *fx_item_32 = new QListWidgetItem("FX Resonant Low Pass Filter");
fx_item_32->setData(32, QVariant("<h2> FX Resonant Low Pass Filter</h2><h2><pre>with_fx :rlpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0, res: 0.5, res_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_32);

QListWidgetItem *fx_item_33 = new QListWidgetItem("FX Normalised Resonant Low Pass Filter");
fx_item_33->setData(32, QVariant("<h2> FX Normalised Resonant Low Pass Filter</h2><h2><pre>with_fx :norm_rlpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0, res: 0.5, res_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_33);

QListWidgetItem *fx_item_34 = new QListWidgetItem("FX Resonant High Pass Filter");
fx_item_34->setData(32, QVariant("<h2> FX Resonant High Pass Filter</h2><h2><pre>with_fx :rhpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0, res: 0.5, res_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_34);

QListWidgetItem *fx_item_35 = new QListWidgetItem("FX Normalised Resonant High Pass Filter");
fx_item_35->setData(32, QVariant("<h2> FX Normalised Resonant High Pass Filter</h2><h2><pre>with_fx :norm_rhpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0, res: 0.5, res_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_35);

QListWidgetItem *fx_item_36 = new QListWidgetItem("FX High Pass Filter");
fx_item_36->setData(32, QVariant("<h2> FX High Pass Filter</h2><h2><pre>with_fx :hpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
fxNameList->addItem(fx_item_36);

QListWidgetItem *fx_item_37 = new QListWidgetItem("FX Normalised High Pass Filter");
fx_item_37->setData(32, QVariant("<h2> FX Normalised High Pass Filter</h2><h2><pre>with_fx :norm_hpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0, res: 0.5, res_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_37);

QListWidgetItem *fx_item_38 = new QListWidgetItem("FX Low Pass Filter");
fx_item_38->setData(32, QVariant("<h2> FX Low Pass Filter</h2><h2><pre>with_fx :lpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
fxNameList->addItem(fx_item_38);

QListWidgetItem *fx_item_39 = new QListWidgetItem("FX Normalised Low Pass Filter");
fx_item_39->setData(32, QVariant("<h2> FX Normalised Low Pass Filter</h2><h2><pre>with_fx :norm_lpf</pre></h2><h4><pre>{cutoff: 100, cutoff_slide: 0, res: 0.5, res_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> cutoff:</pre></h4><ul>    <li> MIDI note representing the highest frequences allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.</li>    <li> Default: 100</li>    <li> must be zero or greater,must be a value less than 130</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> cutoff_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the cutoff value to change. A long cutoff_slide value means that the cutoff takes a long time to slide from the previous value to the new value. A cutoff_slide of 0 means that the cutoff instantly changes to the new value.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> res:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> res_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_39);

QListWidgetItem *fx_item_40 = new QListWidgetItem("FX Normaliser");
fx_item_40->setData(32, QVariant("<h2> FX Normaliser</h2><h2><pre>with_fx :normaliser</pre></h2><h4><pre>{amp: 1, amp_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> amp:</pre></h4><ul>    <li> The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, it will just reduce the quality of all the sounds currently being played (due to compression.)</li>    <li> Default: 1</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul>  <li><h4><pre> amp_slide:</pre></h4><ul>    <li> Amount of time (in seconds) for the amplitude (amp) to change. A long slide value means that the amp takes a long time to slide from the previous amplitude to the new amplitude. A slide of 0 means that the amplitude instantly changes to the new amplitude.</li>    <li> Default: 0</li>    <li> must be zero or greater</li>    <li>May be changed whilst playing</li></ul></li></ul>"));
fxNameList->addItem(fx_item_40);

QListWidgetItem *fx_item_41 = new QListWidgetItem("FX Distortion");
fx_item_41->setData(32, QVariant("<h2> FX Distortion</h2><h2><pre>with_fx :distortion</pre></h2><h4><pre>{distort: 0.5, distort_slide: 0}</pre></h4><h3>  Please write documentation!</h3><h3>Arguments</h3><ul>  <li><h4><pre> distort:</pre></h4><ul>    <li> write me</li>    <li> Default: 0.5</li>    <li> none</li>    <li>Can not be changed once set</li></ul>  <li><h4><pre> distort_slide:</pre></h4><ul>    <li> write me</li>    <li> Default: 0</li>    <li> none</li>    <li>Can not be changed once set</li></ul></li></ul>"));
fxNameList->addItem(fx_item_41);

// samples info

QListWidget *samplesNameList = new QListWidget;
samplesNameList->setSortingEnabled(true);
connect(samplesNameList, SIGNAL(currentItemChanged(QListWidgetItem*, QListWidgetItem*)), this, SLOT(updateDocPane(QListWidgetItem*, QListWidgetItem*)));
QBoxLayout *samplesLayout = new QBoxLayout(QBoxLayout::LeftToRight);
samplesLayout->addWidget(samplesNameList);
samplesLayout->addWidget(samplesDocPane);
samplesLayout->setStretch(1, 1);
QWidget *samplesTabWidget = new QWidget;
samplesTabWidget->setLayout(samplesLayout);
docsCentral->addTab(samplesTabWidget, "Samples");

QListWidgetItem *samples_item_42 = new QListWidgetItem("Drum Sounds");
samples_item_42->setData(32, QVariant("<h2>Drum Sounds</h2><h2><pre>:drum_</pre></h2><ul><li><pre>:drum_heavy_kick</pre></li><li><pre>:drum_tom_mid_soft</pre></li><li><pre>:drum_tom_mid_hard</pre></li><li><pre>:drum_tom_lo_soft</pre></li><li><pre>:drum_tom_lo_hard</pre></li><li><pre>:drum_tom_hi_soft</pre></li><li><pre>:drum_tom_hi_hard</pre></li><li><pre>:drum_splash_soft</pre></li><li><pre>:drum_splash_hard</pre></li><li><pre>:drum_snare_soft</pre></li><li><pre>:drum_snare_hard</pre></li><li><pre>:drum_cymbal_soft</pre></li><li><pre>:drum_cymbal_hard</pre></li><li><pre>:drum_cymbal_open</pre></li><li><pre>:drum_cymbal_closed</pre></li><li><pre>:drum_cymbal_pedal</pre></li><li><pre>:drum_bass_soft</pre></li><li><pre>:drum_bass_hard</pre></li></ul>"));
samplesNameList->addItem(samples_item_42);

QListWidgetItem *samples_item_43 = new QListWidgetItem("Electric Sounds");
samples_item_43->setData(32, QVariant("<h2>Electric Sounds</h2><h2><pre>:elec_</pre></h2><ul><li><pre>:elec_triangle</pre></li><li><pre>:elec_snare</pre></li><li><pre>:elec_lo_snare</pre></li><li><pre>:elec_hi_snare</pre></li><li><pre>:elec_mid_snare</pre></li><li><pre>:elec_cymbal</pre></li><li><pre>:elec_soft_kick</pre></li><li><pre>:elec_filt_snare</pre></li><li><pre>:elec_fuzz_tom</pre></li><li><pre>:elec_chime</pre></li><li><pre>:elec_bong</pre></li><li><pre>:elec_twang</pre></li><li><pre>:elec_wood</pre></li><li><pre>:elec_pop</pre></li><li><pre>:elec_beep</pre></li><li><pre>:elec_blip</pre></li><li><pre>:elec_blip2</pre></li><li><pre>:elec_ping</pre></li><li><pre>:elec_bell</pre></li><li><pre>:elec_flip</pre></li><li><pre>:elec_tick</pre></li><li><pre>:elec_hollow_kick</pre></li><li><pre>:elec_twip</pre></li><li><pre>:elec_plip</pre></li><li><pre>:elec_blup</pre></li></ul>"));
samplesNameList->addItem(samples_item_43);

QListWidgetItem *samples_item_44 = new QListWidgetItem("Sounds featuring guitars");
samples_item_44->setData(32, QVariant("<h2>Sounds featuring guitars</h2><h2><pre>:guit_</pre></h2><ul><li><pre>:guit_harmonics</pre></li><li><pre>:guit_e_fifths</pre></li><li><pre>:guit_e_slide</pre></li></ul>"));
samplesNameList->addItem(samples_item_44);

QListWidgetItem *samples_item_45 = new QListWidgetItem("Miscellaneous Sounds");
samples_item_45->setData(32, QVariant("<h2>Miscellaneous Sounds</h2><h2><pre>:misc_</pre></h2><ul><li><pre>:misc_burp</pre></li></ul>"));
samplesNameList->addItem(samples_item_45);

QListWidgetItem *samples_item_46 = new QListWidgetItem("Percurssive Sounds");
samples_item_46->setData(32, QVariant("<h2>Percurssive Sounds</h2><h2><pre>:perc_</pre></h2><ul><li><pre>:perc_bell</pre></li></ul>"));
samplesNameList->addItem(samples_item_46);

QListWidgetItem *samples_item_47 = new QListWidgetItem("Ambient Sounds");
samples_item_47->setData(32, QVariant("<h2>Ambient Sounds</h2><h2><pre>:ambi_</pre></h2><ul><li><pre>:ambi_soft_buzz</pre></li><li><pre>:ambi_swoosh</pre></li><li><pre>:ambi_drone</pre></li><li><pre>:ambi_glass_hum</pre></li><li><pre>:ambi_glass_rub</pre></li><li><pre>:ambi_haunted_hum</pre></li><li><pre>:ambi_piano</pre></li><li><pre>:ambi_lunar_land</pre></li><li><pre>:ambi_dark_woosh</pre></li><li><pre>:ambi_choir</pre></li></ul>"));
samplesNameList->addItem(samples_item_47);

QListWidgetItem *samples_item_48 = new QListWidgetItem("Bass Sounds");
samples_item_48->setData(32, QVariant("<h2>Bass Sounds</h2><h2><pre>:bass_</pre></h2><ul><li><pre>:bass_hit_c</pre></li><li><pre>:bass_hard_c</pre></li><li><pre>:bass_thick_c</pre></li><li><pre>:bass_drop_c</pre></li><li><pre>:bass_woodsy_c</pre></li><li><pre>:bass_voxy_c</pre></li><li><pre>:bass_voxy_hit_c</pre></li><li><pre>:bass_dnb_f</pre></li></ul>"));
samplesNameList->addItem(samples_item_48);

QListWidgetItem *samples_item_49 = new QListWidgetItem("Sounds for Looping");
samples_item_49->setData(32, QVariant("<h2>Sounds for Looping</h2><h2><pre>:loop_</pre></h2><ul><li><pre>:loop_industrial</pre></li><li><pre>:loop_compus</pre></li><li><pre>:loop_amen</pre></li><li><pre>:loop_amen_full</pre></li></ul>"));
samplesNameList->addItem(samples_item_49);

// lang info

QListWidget *langNameList = new QListWidget;
langNameList->setSortingEnabled(true);
connect(langNameList, SIGNAL(currentItemChanged(QListWidgetItem*, QListWidgetItem*)), this, SLOT(updateDocPane(QListWidgetItem*, QListWidgetItem*)));
QBoxLayout *langLayout = new QBoxLayout(QBoxLayout::LeftToRight);
langLayout->addWidget(langNameList);
langLayout->addWidget(langDocPane);
langLayout->setStretch(1, 1);
QWidget *langTabWidget = new QWidget;
langTabWidget->setLayout(langLayout);
docsCentral->addTab(langTabWidget, "Lang");

QListWidgetItem *lang_item_50 = new QListWidgetItem("define");
lang_item_50->setData(32, QVariant("<h2>Define a new function</h2><h2><pre>define<pre></h2><h2><pre>[name (symbol)]</pre></h2><h3>Allows you to group a bunch of code and give it your own name for future re-use. Functions are very useful for structuring your code. They are also the gateway into live coding as you may redefine a function whilst a thread is calling it, and the next time the thread calls your function, it will use the latest definition.</h3><h3>Example 1</h3><pre><br/># Define a new function called foo<br/>define :foo do<br/>  play 50<br/>  sleep 1<br/>end<br/><br/># Call foo on its own<br/>foo<br/><br/># You can use foo anywhere you would use normal code.<br/># For example, in a block:<br/>3.times do<br/>  foo<br/>end</pre>"));
langNameList->addItem(lang_item_50);

QListWidgetItem *lang_item_51 = new QListWidgetItem("print");
lang_item_51->setData(32, QVariant("<h2>Display a message in the output pane</h2><h2><pre>print<pre></h2><h2><pre>[output (string)]</pre></h2><h3>Displays the information you specify as a string inside the output pane. This can be a number, symbol, or a string itself. Useful for debugging. Synonym for puts.</h3><h3>Example 1</h3><pre>print &quot;hello there&quot;   #=&gt; will print the string &quot;hello there&quot; to the output pane</pre><h3>Example 2</h3><pre>print 5               #=&gt; will print the number 5 to the output pane</pre><h3>Example 3</h3><pre>print foo             #=&gt; will print the contents of foo to the output pane</pre>"));
langNameList->addItem(lang_item_51);

QListWidgetItem *lang_item_52 = new QListWidgetItem("puts");
lang_item_52->setData(32, QVariant("<h2>Display a message in the output pane</h2><h2><pre>puts<pre></h2><h2><pre>[output (string)]</pre></h2><h3>Displays the information you specify as a string inside the output pane. This can be a number, symbol, or a string itself. Useful for debugging. Synonym for print.</h3><h3>Example 1</h3><pre>print &quot;hello there&quot;   #=&gt; will print the string &quot;hello there&quot; to the output pane</pre><h3>Example 2</h3><pre>print 5               #=&gt; will print the number 5 to the output pane</pre><h3>Example 3</h3><pre>print foo             #=&gt; will print the contents of foo to the output pane</pre>"));
langNameList->addItem(lang_item_52);

QListWidgetItem *lang_item_53 = new QListWidgetItem("rrand");
lang_item_53->setData(32, QVariant("<h2></h2><h2><pre>rrand<pre></h2><h2><pre>[min (number), max (number)]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_53);

QListWidgetItem *lang_item_54 = new QListWidgetItem("rrand_i");
lang_item_54->setData(32, QVariant("<h2><pre>rrand_i<pre></h2><h2><pre>[min (number), max (number)]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_54);

QListWidgetItem *lang_item_55 = new QListWidgetItem("choose");
lang_item_55->setData(32, QVariant("<h2><pre>choose<pre></h2><h2><pre>[list (array)]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_55);

QListWidgetItem *lang_item_56 = new QListWidgetItem("use_bpm");
lang_item_56->setData(32, QVariant("<h2><pre>use_bpm<pre></h2><h2><pre>[bpm (number)]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_56);

QListWidgetItem *lang_item_57 = new QListWidgetItem("with_bpm");
lang_item_57->setData(32, QVariant("<h2><pre>with_bpm<pre></h2><h2><pre>[]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_57);

QListWidgetItem *lang_item_58 = new QListWidgetItem("sleep");
lang_item_58->setData(32, QVariant("<h2><pre>sleep<pre></h2><h2><pre>[seconds (number)]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_58);

QListWidgetItem *lang_item_59 = new QListWidgetItem("sync");
lang_item_59->setData(32, QVariant("<h2><pre>sync<pre></h2><h2><pre>[sync_id (symbol)]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_59);

QListWidgetItem *lang_item_60 = new QListWidgetItem("wait");
lang_item_60->setData(32, QVariant("<h2><pre>wait<pre></h2><h2><pre>[sync_id (symbol)]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_60);

QListWidgetItem *lang_item_61 = new QListWidgetItem("in_thread");
lang_item_61->setData(32, QVariant("<h2><pre>in_thread<pre></h2><h2><pre>[]</pre></h2><h3></h3>"));
langNameList->addItem(lang_item_61);

QListWidgetItem *lang_item_62 = new QListWidgetItem("set_sched_ahead_time!");
lang_item_62->setData(32, QVariant("<h2><pre>set_sched_ahead_time!<pre></h2><h2><pre>[time (number)]</pre></h2><h3>Specify how many seconds ahead of time the synths should be triggered. This represents the amount of time between pressing 'Run' and hearing audio. A larger time gives the system more room to work with and can reduce performance issues in playing fast sections on slower platforms.</h3><h3>Example 1</h3><pre>set_sched_ahead_time! 1</pre>"));
langNameList->addItem(lang_item_62);

QListWidgetItem *lang_item_63 = new QListWidgetItem("use_debug");
lang_item_63->setData(32, QVariant("<h2><pre>use_debug<pre></h2><h2><pre>[true_or_false (boolean)]</pre></h2><h3>Enable or disable messages created on synth triggers. If this is set to false, the synths will be silent until debug is turned back on. Silencing debug messages can reduce output noise and also increase performance on slower platforms.</h3><h3>Example 1</h3><pre>use_debug true # Turn on debug messages</pre><h3>Example 2</h3><pre>use_debug false # Disable debug messages</pre>"));
langNameList->addItem(lang_item_63);

QListWidgetItem *lang_item_64 = new QListWidgetItem("with_debug");
lang_item_64->setData(32, QVariant("<h2><pre>with_debug<pre></h2><h2><pre>[true_or_false (boolean)]</pre></h2><h3>Similar to use_debug except only applies to code within supplied do/end block. Previous debug value is restored after block.</h3><h3>Example 1</h3><pre><br/># Turn on debugging:<br/>use_debug true<br/><br/>play 80 # Debug message is sent<br/><br/>with_debug false do<br/>  #Debug is now disabled<br/>  play 50 # Debug message is not sent<br/>  sleep 1<br/>  play 72 # Debug message is not sent<br/>end<br/><br/># Debug is re-enabled<br/>play 90 # Debug message is sent</pre>"));
langNameList->addItem(lang_item_64);

QListWidgetItem *lang_item_65 = new QListWidgetItem("use_arg_checks");
lang_item_65->setData(32, QVariant("<h2><pre>use_arg_checks<pre></h2><h2><pre>[true_or_false (boolean)]</pre></h2><h3>When triggering synths, each argument is checked to see if it is sensible. This setting allows you to explicitly enable and disable the checking mechanism.</h3><h3>Example 1</h3><pre></pre>"));
langNameList->addItem(lang_item_65);

QListWidgetItem *lang_item_66 = new QListWidgetItem("with_arg_checks");
lang_item_66->setData(32, QVariant("<h2><pre>with_arg_checks<pre></h2><h2><pre>[true_or_false (boolean)]</pre></h2><h3>Similar to use_arg_checks except only applies to code within supplied do/end block. Previous arg check value is restored after block.</h3><h3>Example 1</h3><pre><br/># Turn on arg checking:<br/>use_arg_checks true<br/><br/>play 80, cutoff: 100 # Args are checked<br/><br/>with_arg_checks false do<br/>  #Arg checking is now disabled<br/>  play 50, release: 3 # Args are not checked<br/>  sleep 1<br/>  play 72             # Arg is not checked<br/>end<br/><br/># Arg checking is re-enabled<br/>play 90 # Args are checked</pre>"));
langNameList->addItem(lang_item_66);

QListWidgetItem *lang_item_67 = new QListWidgetItem("use_transpose");
lang_item_67->setData(32, QVariant("<h2><pre>use_transpose<pre></h2><h2><pre>[note_shift (number)]</pre></h2><h3>Transposes your music by shifting all notes played by the specified amount. To shift up by a semitone use a transpose of 1. To shift down use negative numbers.</h3><h3>Example 1</h3><pre><br/>play 50 # Plays note 50<br/>use_transpose 1<br/>play 50 # Plays note 51</pre><h3>Example 2</h3><pre><br/># You may change the transposition multiple times:<br/>play 62 # Plays note 62<br/>use_transpose -12<br/>play 62 # Plays note 50<br/>use_transpose 3<br/>play 62 # Plays note 65</pre>"));
langNameList->addItem(lang_item_67);

QListWidgetItem *lang_item_68 = new QListWidgetItem("with_transpose");
lang_item_68->setData(32, QVariant("<h2><pre>with_transpose<pre></h2><h2><pre>[note_shift (number)]</pre></h2><h3>Similar to use_transpose except only applies to code within supplied do/end block. Previous transpose value is restored after block.</h3><h3>Example 1</h3><pre><br/>use_transpose 3<br/>play 62 # Plays note 65<br/><br/>with_transpose 12 do<br/>  play 50 # Plays note 62<br/>  sleep 1<br/>  play 72 # Plays note 84<br/>end<br/><br/># Original transpose value is restored<br/>play 80 # Plays note 83</pre>"));
langNameList->addItem(lang_item_68);

QListWidgetItem *lang_item_69 = new QListWidgetItem("use_synth");
lang_item_69->setData(32, QVariant("<h2><pre>use_synth<pre></h2><h2><pre>[synth_name (symbol)]</pre></h2><h3>Switch the current synth to synth_name. Affects all further calls to play.</h3><h3>Example 1</h3><pre><br/>play 50 # Plays with default synth<br/>use_synth :mod_sine<br/>play 50 # Plays with mod_sine synth</pre>"));
langNameList->addItem(lang_item_69);

QListWidgetItem *lang_item_70 = new QListWidgetItem("with_synth");
lang_item_70->setData(32, QVariant("<h2><pre>with_synth<pre></h2><h2><pre>[synth_name (symbol)]</pre></h2><h3>Switch the current synth to synth_name but only for the duration of the do/end block. After the do/end block has completed, the previous synth is restored.</h3><h3>Example 1</h3><pre><br/>play 50 # Plays with default synth<br/>use_synth :mod_sine<br/>play 50 # Plays with mod_sine synth<br/><br/>with_synth :saw_beep do<br/>  play 50 # Plays with saw_beep synth<br/>end<br/><br/># Previous synth is restored<br/>play 50 # Plays with mod_sine synth</pre>"));
langNameList->addItem(lang_item_70);

QListWidgetItem *lang_item_71 = new QListWidgetItem("play");
lang_item_71->setData(32, QVariant("<h2><pre>play<pre></h2><h2><pre>[note (symbol_or_number)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_71);

QListWidgetItem *lang_item_72 = new QListWidgetItem("play_pattern");
lang_item_72->setData(32, QVariant("<h2><pre>play_pattern<pre></h2><h2><pre>[notes (list)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_72);

QListWidgetItem *lang_item_73 = new QListWidgetItem("play_pattern_timed");
lang_item_73->setData(32, QVariant("<h2><pre>play_pattern_timed<pre></h2><h2><pre>[notes (list), times (list)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_73);

QListWidgetItem *lang_item_74 = new QListWidgetItem("play_chord");
lang_item_74->setData(32, QVariant("<h2><pre>play_chord<pre></h2><h2><pre>[notes (list)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_74);

QListWidgetItem *lang_item_75 = new QListWidgetItem("repeat");
lang_item_75->setData(32, QVariant("<h2><pre>repeat<pre></h2><h2><pre>[notes (list)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_75);

QListWidgetItem *lang_item_76 = new QListWidgetItem("use_merged_synth_defaults");
lang_item_76->setData(32, QVariant("<h2><pre>use_merged_synth_defaults<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_76);

QListWidgetItem *lang_item_77 = new QListWidgetItem("with_merged_synth_defaults");
lang_item_77->setData(32, QVariant("<h2><pre>with_merged_synth_defaults<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_77);

QListWidgetItem *lang_item_78 = new QListWidgetItem("use_synth_defaults");
lang_item_78->setData(32, QVariant("<h2><pre>use_synth_defaults<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_78);

QListWidgetItem *lang_item_79 = new QListWidgetItem("with_synth_defaults");
lang_item_79->setData(32, QVariant("<h2><pre>with_synth_defaults<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_79);

QListWidgetItem *lang_item_80 = new QListWidgetItem("with_fx");
lang_item_80->setData(32, QVariant("<h2><pre>with_fx<pre></h2><h2><pre>[fx_name (symbol)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_80);

QListWidgetItem *lang_item_81 = new QListWidgetItem("use_sample_pack");
lang_item_81->setData(32, QVariant("<h2><pre>use_sample_pack<pre></h2><h2><pre>[pack_path (string)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_81);

QListWidgetItem *lang_item_82 = new QListWidgetItem("with_sample_pack");
lang_item_82->setData(32, QVariant("<h2><pre>with_sample_pack<pre></h2><h2><pre>[pack_path (string)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_82);

QListWidgetItem *lang_item_83 = new QListWidgetItem("current_bpm");
lang_item_83->setData(32, QVariant("<h2><pre>current_bpm<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_83);

QListWidgetItem *lang_item_84 = new QListWidgetItem("set_volume!");
lang_item_84->setData(32, QVariant("<h2><pre>set_volume!<pre></h2><h2><pre>[vol (number)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_84);

QListWidgetItem *lang_item_85 = new QListWidgetItem("load_sample");
lang_item_85->setData(32, QVariant("<h2><pre>load_sample<pre></h2><h2><pre>[path (string)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_85);

QListWidgetItem *lang_item_86 = new QListWidgetItem("load_samples");
lang_item_86->setData(32, QVariant("<h2><pre>load_samples<pre></h2><h2><pre>[paths (list)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_86);

QListWidgetItem *lang_item_87 = new QListWidgetItem("sample_info");
lang_item_87->setData(32, QVariant("<h2><pre>sample_info<pre></h2><h2><pre>[path (string)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_87);

QListWidgetItem *lang_item_88 = new QListWidgetItem("sample_duration");
lang_item_88->setData(32, QVariant("<h2><pre>sample_duration<pre></h2><h2><pre>[path (string)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_88);

QListWidgetItem *lang_item_89 = new QListWidgetItem("sample");
lang_item_89->setData(32, QVariant("<h2><pre>sample<pre></h2><h2><pre>[name_or_path (symbol_or_string)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_89);

QListWidgetItem *lang_item_90 = new QListWidgetItem("status");
lang_item_90->setData(32, QVariant("<h2><pre>status<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_90);

QListWidgetItem *lang_item_91 = new QListWidgetItem("note");
lang_item_91->setData(32, QVariant("<h2><pre>note<pre></h2><h2><pre>[note (symbol_or_number)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_91);

QListWidgetItem *lang_item_92 = new QListWidgetItem("note_info");
lang_item_92->setData(32, QVariant("<h2><pre>note_info<pre></h2><h2><pre>[note (symbol_or_number)]</pre></h2><h3>add docs - :octave opt is overridden if oct specified in symbol i.e. :c3</h3>"));
langNameList->addItem(lang_item_92);

QListWidgetItem *lang_item_93 = new QListWidgetItem("scale");
lang_item_93->setData(32, QVariant("<h2><pre>scale<pre></h2><h2><pre>[tonic (symbol), name (symbol)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_93);

QListWidgetItem *lang_item_94 = new QListWidgetItem("chord");
lang_item_94->setData(32, QVariant("<h2><pre>chord<pre></h2><h2><pre>[tonic (symbol), name (symbol)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_94);

QListWidgetItem *lang_item_95 = new QListWidgetItem("control");
lang_item_95->setData(32, QVariant("<h2><pre>control<pre></h2><h2><pre>[node (synth_node)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_95);

QListWidgetItem *lang_item_96 = new QListWidgetItem("sample_names");
lang_item_96->setData(32, QVariant("<h2><pre>sample_names<pre></h2><h2><pre>[group (symbol)]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_96);

QListWidgetItem *lang_item_97 = new QListWidgetItem("all_sample_names");
lang_item_97->setData(32, QVariant("<h2><pre>all_sample_names<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_97);

QListWidgetItem *lang_item_98 = new QListWidgetItem("sample_groups");
lang_item_98->setData(32, QVariant("<h2><pre>sample_groups<pre></h2><h2><pre>[]</pre></h2><h3>add docs</h3>"));
langNameList->addItem(lang_item_98);

QListWidgetItem *lang_item_99 = new QListWidgetItem("n.times");
lang_item_99->setData(32, QVariant("Loop n times"));
langNameList->addItem(lang_item_99);

QListWidgetItem *lang_item_100 = new QListWidgetItem("loop");
lang_item_100->setData(32, QVariant("Loop forever"));
langNameList->addItem(lang_item_100);

// examples info

QListWidget *examplesNameList = new QListWidget;
examplesNameList->setSortingEnabled(true);
connect(examplesNameList, SIGNAL(currentItemChanged(QListWidgetItem*, QListWidgetItem*)), this, SLOT(updateDocPane(QListWidgetItem*, QListWidgetItem*)));
QBoxLayout *examplesLayout = new QBoxLayout(QBoxLayout::LeftToRight);
examplesLayout->addWidget(examplesNameList);
examplesLayout->addWidget(examplesDocPane);
examplesLayout->setStretch(1, 1);
QWidget *examplesTabWidget = new QWidget;
examplesTabWidget->setLayout(examplesLayout);
docsCentral->addTab(examplesTabWidget, "Examples");

QListWidgetItem *examples_item_101 = new QListWidgetItem("ambient");
examples_item_101->setData(32, QVariant("<pre>load_samples(sample_names :ambi)<br/><br/>with_fx :reverb, mix: 0.3 do<br/>  loop do<br/>    s_name = choose sample_names :ambi<br/>    s_time = rrand_i 1, 2<br/>    s = sample s_name, rate: choose([0.5, 1]), pan: rrand(-1, 1), pan_slide: s_time<br/>    control s, pan: rrand(-1, 1)<br/>    sleep s_time<br/>  end<br/>end </pre>"));
examplesNameList->addItem(examples_item_101);

QListWidgetItem *examples_item_102 = new QListWidgetItem("compus_beats");
examples_item_102->setData(32, QVariant("<pre>sd = sample_duration :loop_compus<br/><br/>define :loopr do<br/>  sample :loop_compus, rate: [0.5, 1, 1, 1, 1, 2].choose if rand &lt; 0.9<br/>  sleep sd<br/>end<br/><br/>define :bass do<br/>  sample :bass_voxy_c, amp: rrand(0.1, 0.2), rate: [0.5, 0.5, 1, 1,2,4].choose if rand &lt; 0.25<br/>  use_synth :mod_pulse<br/>  play :C1, mod_range: 12, amp: rrand(0.5, 1), mod_rate: [8, 16, 32].choose / sd, release: 1, cutoff: rrand(50, 90)<br/>  play :C2, mod_range: [24, 36, 34].choose, amp: 0.35, mod_rate: 16 / sd, release: 2, cutoff: 60, pulse_width: rand<br/>  sleep sd / 4<br/>end<br/><br/>in_thread(name: :t1){loop{loopr}}<br/>in_thread(name: :t2){loop{bass}} </pre>"));
examplesNameList->addItem(examples_item_102);

QListWidgetItem *examples_item_103 = new QListWidgetItem("driving_pulse");
examples_item_103->setData(32, QVariant("<pre>load_sample :drum_heavy_kick<br/><br/>define :drums do<br/>  sample :drum_heavy_kick, rate: 0.75<br/>  sleep 0.5<br/>  sample :drum_heavy_kick<br/>  sleep 0.5<br/>end<br/><br/>define :synths do<br/>  use_synth :mod_pulse<br/>  use_synth_defaults amp: 1, mod_range: 15, attack: 0.03, release: 0.6, cutoff: 80, pulse_width: 0.2, mod_rate: 4<br/>  play 30<br/>  sleep 0.25<br/>  play 38<br/>  sleep 0.25<br/>end<br/><br/>in_thread(name: :drums){loop{drums}}<br/>in_thread(name: :synths){loop{synths}} </pre>"));
examplesNameList->addItem(examples_item_103);

QListWidgetItem *examples_item_104 = new QListWidgetItem("echo_drama");
examples_item_104->setData(32, QVariant("<pre>use_synth :tb303<br/><br/>rate = 0.7<br/>rate_mul = 1.0 / rate<br/><br/>with_fx(:echo, delay: 0.5 * rate_mul, decay: 4) do<br/>  loop do<br/>    play chord([:b1, :b2, :e1, :e2, :b3, :e3].choose, :minor).choose, cutoff: rrand(40, 100), amp: 0.5, attack: 0, release: 2<br/>    sleep [0.25, 0.5, 0.5, 0.5, 1, 1].choose * rate_mul<br/>  end<br/>end </pre>"));
examplesNameList->addItem(examples_item_104);

QListWidgetItem *examples_item_105 = new QListWidgetItem("filtered_dnb");
examples_item_105->setData(32, QVariant("<pre>with_fx(:rlpf, cutoff: 10, cutoff_slide: 20) do |c|<br/>  loop do<br/>    sample :bass_dnb_f, amp: 5<br/>    sample :loop_amen, amp: 5<br/>    sleep sample_duration :loop_amen<br/>    c.ctl cutoff: rrand(40, 120), cutoff_slide: rrand(1, 20)<br/>  end<br/>end </pre>"));
examplesNameList->addItem(examples_item_105);

QListWidgetItem *examples_item_106 = new QListWidgetItem("fm_noise");
examples_item_106->setData(32, QVariant("<pre>use_synth :fm<br/><br/>loop do<br/>  p = play chord(:Eb3, :minor).choose - [0, 12, -12].choose, divisor: 0.01, div_slide: rrand(0, 100), depth: rrand(0.001, 2), attack: 0.01, release: rrand(0, 5), amp: 0.5<br/>  p.control divisor: rrand(0.001, 50)<br/>  sleep [0.5, 1, 2].choose<br/>end </pre>"));
examplesNameList->addItem(examples_item_106);

QListWidgetItem *examples_item_107 = new QListWidgetItem("guitar_pulses");
examples_item_107->setData(32, QVariant("<pre>size = 0.5<br/><br/>in_thread do<br/>  loop do<br/>    s_name = :guit_e_slide<br/>    s = rand(1 - size)<br/>    e = s + size<br/>    if rand &lt; 0.25<br/>      r = -1<br/>    else<br/>      r = 1<br/>    end<br/>    sample s_name, start: s, finish: e, attack: 0.1, release: 0.1, rate: r * [1, 0.5].choose<br/>    sleep sample_duration(s_name) * size<br/>  end<br/>end<br/><br/>in_thread do<br/>  loop do<br/>    n_size = size / 0.5<br/>    s_name = :guit_harmonics<br/>    s = rand(1 - n_size)<br/>    e = s + n_size<br/>    if rand &lt; 0.25<br/>      r = -1<br/>    else<br/>      r = 1<br/>    end<br/>    sample s_name, start: s, finish: e, attack: 0.1, release: 0.1, rate: r * 0.5<br/>    sleep sample_duration(s_name) * n_size<br/>  end<br/>end<br/><br/><br/>loop do<br/>  n_size = size / 8<br/>  s_name = :guit_e_fifths<br/>  s = 0.2 + rand(0.3)<br/>  e = s + n_size<br/>  sample s_name, start: s, finish: e, attack: 0.1, release: 0.1<br/>  sleep sample_duration(s_name) * n_size<br/>end </pre>"));
examplesNameList->addItem(examples_item_107);

QListWidgetItem *examples_item_108 = new QListWidgetItem("haunted_bells");
examples_item_108->setData(32, QVariant("<pre>loop do<br/>  sample :perc_bell, rate: (rrand 0.125, 1.5)<br/>  sleep rrand(0, 2)<br/>end </pre>"));
examplesNameList->addItem(examples_item_108);

QListWidgetItem *examples_item_109 = new QListWidgetItem("idm_breakbeat");
examples_item_109->setData(32, QVariant("<pre>define :play_bb do |n|<br/>  sample :drum_heavy_kick<br/>  sample :ambi_drone, rate: [0.25, 0.5, 0.125, 1].choose, amp: 0.25 if rand &lt; 0.125<br/>  sample :ambi_lunar_land, rate: [0.5, 0.125, 1, -1, -0.5].choose, amp: 0.25 if rand &lt; 0.125<br/>  sample :loop_amen, attack: 0, release: 0.05, start: 1 - (1.0 / n), rate: [1,1,1,1,1,1,-1].choose<br/>  sleep sample_duration(:loop_amen) / n<br/>end<br/><br/><br/>loop {play_bb([1,2,4,8,16].choose)} </pre>"));
examplesNameList->addItem(examples_item_109);

QListWidgetItem *examples_item_110 = new QListWidgetItem("jungle");
examples_item_110->setData(32, QVariant("<pre>with_fx :lpf, cutoff: 90 do<br/>  with_fx :reverb, mix: 0.5 do<br/>    with_fx :compressor, amp: 40 do<br/>      with_fx :distortion, distort: 0.4 do<br/>        loop do<br/>          sample :loop_amen, rate: 1.35<br/>          sleep sample_duration :loop_amen, rate: 1.35<br/>        end<br/>      end<br/>    end<br/>  end<br/>end </pre>"));
examplesNameList->addItem(examples_item_110);

QListWidgetItem *examples_item_111 = new QListWidgetItem("tron_bike");
examples_item_111->setData(32, QVariant("<pre>loop do<br/>  with_synth :dsaw do<br/>    with_fx(:slicer, freq: [4,8].choose) do<br/>      with_fx(:reverb, room: 0.5, mix: 0.3) do<br/>        n1 = chord([:b1, :b2, :e1, :e2, :b3, :e3].choose, :minor).choose<br/>        n2 = chord([:b1, :b2, :e1, :e2, :b3, :e3].choose, :minor).choose<br/><br/>        p = play n1, amp: 2, release: 8, note_slide: 4, cutoff: 30, cutoff_slide: 4, detune: rrand(0, 0.2)<br/>        p.control note: n2, cutoff: rrand(80, 120)<br/>      end<br/>    end<br/>  end<br/><br/>  sleep 8<br/>end </pre>"));
examplesNameList->addItem(examples_item_111);

}
